#
# Test WFS
#
# REQUIRES: INPUT=GDAL OUTPUT=PNG SUPPORTS=WFS GEOS
#
#
#
# Verify PropertyIsEqualTo
# RUN_PARMS: wfs_filter_property_is_equal.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>Digby</Literal></PropertyIsEqualTo></Filter>" > [RESULT]

# RUN_PARMS: wfs_filter_200_property_is_equal.xml [MAPSERV] [POST]<?xml version="1.0"?><GetFeature service="WFS" version="2.0.0" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns="http://www.opengis.net/wfs/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/fes/2.0 http://schemas.opengis.net/filter/2.0/filterAll.xsd http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd http://www.opengis.net/gml/3.2 http://schemas.opengis.net/gml/3.2.1/gml.xsd"><Query typeNames="popplace"><fes:Filter><fes:PropertyIsEqualTo><fes:ValueReference>NAME</fes:ValueReference><fes:Literal>Digby</fes:Literal></fes:PropertyIsEqualTo></fes:Filter></Query></GetFeature>[/POST] > [RESULT_DEVERSION]

# Verify PropertyIsEqualTo with no matching (due to case sensitivity)
# RUN_PARMS: wfs_filter_property_is_equal_no_matching.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>DIGBY</Literal></PropertyIsEqualTo></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_property_is_equal_case_insensitive.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsEqualTo matchCase=\"false\"><PropertyName>NAME</PropertyName><Literal>DIGBY</Literal></PropertyIsEqualTo></Filter>" > [RESULT]

# RUN_PARMS: wfs_filter_200_property_is_equal_case_insensitive.xml [MAPSERV] [POST]<?xml version="1.0"?><GetFeature service="WFS" version="2.0.0" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns="http://www.opengis.net/wfs/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/fes/2.0 http://schemas.opengis.net/filter/2.0/filterAll.xsd http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd http://www.opengis.net/gml/3.2 http://schemas.opengis.net/gml/3.2.1/gml.xsd"><Query typeNames="popplace"><fes:Filter><fes:PropertyIsEqualTo matchCase="false"><fes:ValueReference>NAME</fes:ValueReference><fes:Literal>DIGBY</fes:Literal></fes:PropertyIsEqualTo></fes:Filter></Query></GetFeature>[/POST] > [RESULT_DEVERSION]

# Test quotes in filter
# RUN_PARMS: wfs_filter_property_is_equal_quote1.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>\"Tignish</Literal></PropertyIsEqualTo></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_property_is_equal_quote2.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>'Cheticamp</Literal></PropertyIsEqualTo></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_property_is_equal_quote3.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>'Souris'</Literal></PropertyIsEqualTo></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_property_is_equal_quote4.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>\"Canso\"</Literal></PropertyIsEqualTo></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_property_is_equal_quote5.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>\"Wind\"sor</Literal></PropertyIsEqualTo></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_property_is_equal_quote6.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>Tru\"ro</Literal></PropertyIsEqualTo></Filter>" > [RESULT]
#
# Test parenthesis in filter (#4986)
#
# RUN_PARMS: wfs_filter_property_is_equal_parenthesis.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=(<Filter><PropertyIsEqualTo foo='>bar<'><!--commment--><PropertyName>NAME</PropertyName><Literal>f'oo(bar</Literal></PropertyIsEqualTo></Filter>)" > [RESULT]
# RUN_PARMS: wfs_filter_property_is_equal_parenthesis_post.xml [MAPSERV] [MAPSERV] [POST]<?xml version="1.0"?><GetFeature service="WFS" version="2.0.0" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns="http://www.opengis.net/wfs/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/fes/2.0 http://schemas.opengis.net/filter/2.0/filterAll.xsd http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd http://www.opengis.net/gml/3.2 http://schemas.opengis.net/gml/3.2.1/gml.xsd"><Query typeNames="popplace"><fes:Filter><fes:PropertyIsEqualTo matchCase="false"><fes:ValueReference>NAME</fes:ValueReference><fes:Literal>f'oo(bar</fes:Literal></fes:PropertyIsEqualTo></fes:Filter></Query></GetFeature>[/POST] > [RESULT_DEVERSION]
#
# Verify PropertyIsNotEqualTo
# RUN_PARMS: wfs_filter_is_not_equal.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsNotEqualTo><PropertyName>NAME</PropertyName><Literal>Digby</Literal></PropertyIsNotEqualTo></Filter>" > [RESULT]
#
# Verify PropertyIsLessThan
# RUN_PARMS: wfs_filter_isless_than.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsLessThan><PropertyName>POP_RANGE</PropertyName><Literal>3</Literal></PropertyIsLessThan></Filter>" > [RESULT]
#
# Verify PropertyIsGreaterThan
# RUN_PARMS: wfs_filter_isgreater_than.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsGreaterThan><PropertyName>POP_RANGE</PropertyName><Literal>3</Literal></PropertyIsGreaterThan></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsLessThanOrEqualTo
# RUN_PARMS: wfs_filter_isless_than_or_equalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsLessThanOrEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>2</Literal></PropertyIsLessThanOrEqualTo></Filter>" > [RESULT]
#
# Verify PropertyIsGreaterThanOrEqualTo
# RUN_PARMS: wfs_filter_greater_than_or_equalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsGreaterThanOrEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>4</Literal></PropertyIsGreaterThanOrEqualTo></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsBetween
# RUN_PARMS: wfs_filter_isbetween.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsBetween><PropertyName>POP_RANGE</PropertyName><LowerBoundary>4</LowerBoundary><UpperBoundary>6</UpperBoundary></PropertyIsBetween></Filter>" > [RESULT_DEVERSION]
# RUN_PARMS: wfs_filter_isbetween_with_literal.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsBetween><PropertyName>POP_RANGE</PropertyName><LowerBoundary><Literal>4</Literal></LowerBoundary><UpperBoundary><Literal>6</Literal></UpperBoundary></PropertyIsBetween></Filter>" > [RESULT_DEVERSION]
#
# RUN_PARMS: wfs_filter_200_property_isbetween.xml [MAPSERV] [POST]<?xml version="1.0"?><GetFeature service="WFS" version="2.0.0" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns="http://www.opengis.net/wfs/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/fes/2.0 http://schemas.opengis.net/filter/2.0/filterAll.xsd http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd http://www.opengis.net/gml/3.2 http://schemas.opengis.net/gml/3.2.1/gml.xsd"><Query typeNames="popplace"><fes:Filter><fes:PropertyIsBetween><fes:ValueReference>POP_RANGE</fes:ValueReference><fes:LowerBoundary><fes:Literal>4</fes:Literal></fes:LowerBoundary><fes:UpperBoundary><fes:Literal>6</fes:Literal></fes:UpperBoundary></fes:PropertyIsBetween></fes:Filter></Query></GetFeature>[/POST] > [RESULT_DEVERSION]

# Verify PropertyIsLike
# RUN_PARMS: wfs_filter_islike.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsLike+wildCard='*'+singleChar='.'+escape='!'><PropertyName>NAME</PropertyName><Literal>Syd*</Literal></PropertyIsLike></Filter>" > [RESULT]
#
# RUN_PARMS: wfs_filter_islike_no_ending_wildcard_empty_resultset.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsLike+wildCard='*'+singleChar='.'+escape='!'><PropertyName>NAME</PropertyName><Literal>Syd</Literal></PropertyIsLike></Filter>" > [RESULT]
#
# RUN_PARMS: wfs_filter_islike_no_ending_wildcard_non_empty_resultset.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsLike+wildCard='*'+singleChar='.'+escape='!'><PropertyName>NAME</PropertyName><Literal>Sydney</Literal></PropertyIsLike></Filter>" > [RESULT]
#
# RUN_PARMS: wfs_filter_islike_escaping.xml [MAPSERV] QUERY_STRING='map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=test_islike_escaping&FILTER=<Filter><PropertyIsLike+wildCard="*"+singleChar="."+escape="^"><PropertyName>prop</PropertyName><Literal>\^^${}[]()^.^*%2B-?|"a.*e</Literal></PropertyIsLike></Filter>' > [RESULT]
#
# Again but use as an escape character the regexp escape character
# RUN_PARMS: wfs_filter_islike_escaping.xml [MAPSERV] QUERY_STRING='map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=test_islike_escaping&FILTER=<Filter><PropertyIsLike+wildCard="*"+singleChar="."+escape="\"><PropertyName>prop</PropertyName><Literal>\\^${}[]()\.\*%2B-?|"a.*e</Literal></PropertyIsLike></Filter>' > [RESULT]
#
#
# RUN_PARMS: wfs_filter_200_islike.xml [MAPSERV] [POST]<?xml version="1.0"?><GetFeature service="WFS" version="2.0.0" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns="http://www.opengis.net/wfs/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/fes/2.0 http://schemas.opengis.net/filter/2.0/filterAll.xsd http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd http://www.opengis.net/gml/3.2 http://schemas.opengis.net/gml/3.2.1/gml.xsd"><Query typeNames="popplace"><fes:Filter><fes:PropertyIsLike wildCard='*' singleChar='.' escapeChar='!'><fes:ValueReference>NAME</fes:ValueReference><fes:Literal>Syd*</fes:Literal></fes:PropertyIsLike></fes:Filter></Query></GetFeature>[/POST] > [RESULT_DEVERSION]

# Verify PropertyIsLike with logical operators
# RUN_PARMS: wfs_filter_islike_logical.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><AND><PropertyIsLike+wildCard='*'+singleChar='.'+escape='!'><PropertyName>NAME</PropertyName><Literal>Syd*</Literal></PropertyIsLike><PropertyIsLike+wildCard='*'+singleChar='.'+escape='!'><PropertyName>POP_RANGE</PropertyName><Literal>3</Literal></PropertyIsLike></AND></Filter>" > [RESULT]
#
# Verify PropertyIsBetween OR PropertyIsEqualTo
# RUN_PARMS: wfs_filter_isbetween_or_isequalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><OR><PropertyIsBetween><PropertyName>POP_RANGE</PropertyName><LowerBoundary>4</LowerBoundary><UpperBoundary>6</UpperBoundary></PropertyIsBetween><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>Digby</Literal></PropertyIsEqualTo></OR></Filter>" > [RESULT]
#
# Verify PropertyIsBetween AND PropertyIsEqualTo
# RUN_PARMS: wfs_filter_isbetween_and_isequalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><AND><PropertyIsBetween><PropertyName>POP_RANGE</PropertyName><LowerBoundary>1</LowerBoundary><UpperBoundary>3</UpperBoundary></PropertyIsBetween><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>Digby</Literal></PropertyIsEqualTo></AND></Filter>" > [RESULT]
#
# Verify PropertyIsBetween AND NOT PropertyIsEqualTo
# RUN_PARMS: wfs_filter_isbetween_and_not_isequalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><AND><PropertyIsBetween><PropertyName>POP_RANGE</PropertyName><LowerBoundary>4</LowerBoundary><UpperBoundary>6</UpperBoundary></PropertyIsBetween><NOT><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>Sydney</Literal></PropertyIsEqualTo></NOT></AND></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsEqualTo OR PropertyIsEqualTo
# RUN_PARMS: wfs_filter_isequalto_or_isequalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><OR><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>4</Literal></PropertyIsEqualTo><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>5</Literal></PropertyIsEqualTo></OR></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsEqualTo OR PropertyIsEqualTo (sydney or digby)
# RUN_PARMS: wfs_filter_iseq_or_iseq_str1.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><OR><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>Digby</Literal></PropertyIsEqualTo><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>Sydney</Literal></PropertyIsEqualTo></OR></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsEqualTo OR PropertyIsEqualTo ('souris' or digby)
# RUN_PARMS: wfs_filter_iseq_or_iseq_str2.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><OR><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>Digby</Literal></PropertyIsEqualTo><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>'Souris'</Literal></PropertyIsEqualTo></OR></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsEqualTo OR PropertyIsEqualTo ("Tignish or digby)
# RUN_PARMS: wfs_filter_iseq_or_iseq_str3.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><OR><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>Digby</Literal></PropertyIsEqualTo><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>\"Tignish</Literal></PropertyIsEqualTo></OR></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsEqualTo OR PropertyIsEqualTo ('souris' or "Tignish)
# RUN_PARMS: wfs_filter_iseq_or_iseq_str4.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><OR><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>'Souris'</Literal></PropertyIsEqualTo><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>\"Tignish</Literal></PropertyIsEqualTo></OR></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsEqualTo OR PropertyIsEqualTo ("Tignish or 'souris')
# RUN_PARMS: wfs_filter_iseq_or_iseq_str5.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><OR><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>\"Tignish</Literal></PropertyIsEqualTo><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>'Souris'</Literal></PropertyIsEqualTo></OR></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsEqualTo OR PropertyIsEqualTo reverse
# RUN_PARMS: wfs_filter_isequalto_or_isequalto_reverse.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><OR><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>5</Literal></PropertyIsEqualTo><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>4</Literal></PropertyIsEqualTo></OR></Filter>" > [RESULT_DEVERSION]
#
# Verify PropertyIsEqualTo AND PropertyIsEqualTo
# RUN_PARMS: wfs_filter_isequalto_and_isequalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><And><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>4</Literal></PropertyIsEqualTo><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>5</Literal></PropertyIsEqualTo></And></Filter>" > [RESULT]
#
# Verify PropertyIsEqualTo AND PropertyIsEqualTo reverse order
# RUN_PARMS: wfs_filter_isequalto_and_isequalto_reverse.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><And><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>5</Literal></PropertyIsEqualTo><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>4</Literal></PropertyIsEqualTo></And></Filter>" > [RESULT]
#
# Verify 3 AND
# RUN_PARMS: wfs_filter_3_and.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><And><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>Digby</Literal></PropertyIsEqualTo><PropertyIsEqualTo><PropertyName>NTS50</PropertyName><Literal>021A12</Literal></PropertyIsEqualTo><PropertyIsEqualTo><PropertyName>NTS50</PropertyName><Literal>z021A12</Literal></PropertyIsEqualTo></And></Filter>" > [RESULT]
#

# Verify Not PropertyIsEqualTo
# RUN_PARMS: wfs_filter_not_isequalto.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><Not><PropertyIsEqualTo><PropertyName>POP_RANGE</PropertyName><Literal>4</Literal></PropertyIsEqualTo></Not></Filter>" > [RESULT]
#
# Verify BBOX Result:  Digby
# RUN_PARMS: wfs_filter_bbox.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><BBOX><PropertyName>POINT</PropertyName><Box+srsName=%22EPSG:4326%22><coordinates>-65.86,44.56+-65.76,44.68</coordinates></Box></BBOX></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_bbox_no_propertyname.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><BBOX><Box+srsName=%22EPSG:4326%22><coordinates>-65.86,44.56+-65.76,44.68</coordinates></Box></BBOX></Filter>" > [RESULT]

# RUN_PARMS: wfs_filter_false_ogr_property_is_equal_and_bbox.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><Or><PropertyIsEqualTo><PropertyName>NAME</PropertyName><Literal>xxxxxxx</Literal></PropertyIsEqualTo><And><PropertyIsEqualTo><PropertyName>REG_CODE</PropertyName><Literal>12</Literal></PropertyIsEqualTo><BBOX><PropertyName>POINT</PropertyName><Box+srsName=%22EPSG:4326%22><coordinates>-65.86,44.56+-65.76,44.68</coordinates></Box></BBOX></And></Or></Filter>" > [RESULT]

#
# Verify BBOX Result with epsg in http://www.opengis.net/gml/srs/epsg.xml format:  Digby
# RUN_PARMS: wfs_filter_bbox_urlepsg.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.1.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><BBOX><PropertyName>POINT</PropertyName><Box+srsName=%22http://www.opengis.net/gml/srs/epsg.xml#26920%22><coordinates>272868.16,4938053.09+281261.3,4951109.39</coordinates></Box></BBOX></Filter>" > [RESULT]
#
# Verify BBOX Result with epsg in urn:ogc:def:crs:EPSG: format:  Digby
# RUN_PARMS: wfs_filter_bbox_urnepsg.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.1.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><BBOX><PropertyName>POINT</PropertyName><Box+srsName=%22urn:ogc:def:crs:EPSG:26920%22><coordinates>272868.16,4938053.09+281261.3,4951109.39</coordinates></Box></BBOX></Filter>" > [RESULT]
#
# Verify BBOX Result with <Box><coord><X> </X><Y> </Y></coord><coord><X> </X><Y> </Y></coord></Box>
# RUN_PARMS: wfs_filter_bbox_old_fashion.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.1.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><BBOX><PropertyName>POINT</PropertyName><Box+srsName=%22urn:ogc:def:crs:EPSG:26920%22><coord><X>272868.16</X><Y>4938053.09</Y></coord><coord><X>281261.3</X><Y>4951109.39</Y></coord></Box></BBOX></Filter>" > [RESULT]
#
# Verify INTERSECTS Results:  Canso, Port Hawkesbury
# RUN_PARMS: wfs_filter_intersects.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><Intersects><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>-61.63,45.04 -60.78,45.04 -60.78,46.08 -61.63,46.08</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Intersects></Filter>" > [RESULT]
#
# RUN_PARMS: wfs_filter_200_intersects.xml [MAPSERV] [POST]<?xml version="1.0"?><GetFeature service="WFS" version="2.0.0" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns="http://www.opengis.net/wfs/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/fes/2.0 http://schemas.opengis.net/filter/2.0/filterAll.xsd http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd http://www.opengis.net/gml/3.2 http://schemas.opengis.net/gml/3.2.1/gml.xsd"><Query typeNames="popplace"><fes:Filter><fes:Intersects><fes:ValueReference>Geometry</fes:ValueReference><gml:Polygon gml:id="bla" srsName="CRS:84"><gml:exterior><gml:LinearRing><gml:posList>-61.63 45.04 -60.78 45.04 -60.78 46.08 -61.63 46.08</gml:posList></gml:LinearRing></gml:exterior></gml:Polygon></fes:Intersects></fes:Filter></Query></GetFeature>[/POST] > [RESULT_DEVERSION]

#
# RUN_PARMS: wfs_filter_200_intersects_envelope.xml [MAPSERV] [POST]<?xml version="1.0"?><GetFeature service="WFS" version="2.0.0" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns="http://www.opengis.net/wfs/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/fes/2.0 http://schemas.opengis.net/filter/2.0/filterAll.xsd http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd http://www.opengis.net/gml/3.2 http://schemas.opengis.net/gml/3.2.1/gml.xsd"><Query typeNames="popplace"><fes:Filter><fes:Intersects><fes:ValueReference>Geometry</fes:ValueReference><gml:Envelope srsName="urn:ogc:def:crs:EPSG::26920"><gml:lowerCorner>272868.16 4938053.09</gml:lowerCorner><gml:upperCorner>281261.3 4951109.39</gml:upperCorner></gml:Envelope></fes:Intersects></fes:Filter></Query></GetFeature>[/POST] > [RESULT_DEVERSION]

#
# Verify DWITHIN Result:  Sydney
# RUN_PARMS: wfs_filter_dwithin.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><DWithin><PropertyName>Geometry</PropertyName><gml:Point><gml:coordinates>-60.18,46.10</gml:coordinates></gml:Point><Distance units='dd'>0.05</Distance></DWithin></Filter>" > [RESULT]
#
# RUN_PARMS: wfs_filter_200_dwithin.xml [MAPSERV] [POST]<?xml version="1.0"?><GetFeature service="WFS" version="2.0.0" xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns="http://www.opengis.net/wfs/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/fes/2.0 http://schemas.opengis.net/filter/2.0/filterAll.xsd http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd http://www.opengis.net/gml/3.2 http://schemas.opengis.net/gml/3.2.1/gml.xsd"><Query typeNames="popplace"><fes:Filter><fes:DWithin><fes:ValueReference>Geometry</fes:ValueReference><gml:Point gml:id="bla" srsName="CRS:84"><gml:pos>-60.18 46.10</gml:pos></gml:Point><fes:Distance uom='dd'>0.05</fes:Distance></fes:DWithin></fes:Filter></Query></GetFeature>[/POST] > [RESULT_DEVERSION]
#
# Verify DWITHIN Result with MultiPoint:  Sydney
# RUN_PARMS: wfs_filter_dwithin_multipoint.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><DWithin><PropertyName>Geometry</PropertyName><gml:MultiPoint><gml:pointMember><gml:Point><gml:pos>-60.18 46.10</gml:pos></gml:Point></gml:pointMember><gml:pointMember><gml:Point><gml:pos>-60 46</gml:pos></gml:Point></gml:pointMember></gml:MultiPoint><Distance units='dd'>0.05</Distance></DWithin></Filter>" > [RESULT]
#

# Verify DWITHIN with units Result:  Sydney
# RUN_PARMS: wfs_filter_dwithin_units.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><DWithin><PropertyName>Geometry</PropertyName><gml:Point><gml:coordinates>-60.18,46.10</gml:coordinates></gml:Point><Distance units='kilometers'>10</Distance></DWithin></Filter>" > [RESULT]
#
# Verify BEYOND Results:  all but Sydney excluded
# RUN_PARMS: wfs_filter_beyond.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><Beyond><PropertyName>Geometry</PropertyName><gml:Point><gml:coordinates>-60.18,46.10</gml:coordinates></gml:Point><Distance units='dd'>0.05</Distance></Beyond></Filter>" > [RESULT]
#
# Verify EQUALS Result:  Cheticamp
# RUN_PARMS: wfs_filter_equals.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><Equals><PropertyName>Geometry</PropertyName><gml:Point+srsName=%22EPSG:3978%22><gml:coordinates>2503805.5,427872.65625</gml:coordinates></gml:Point></Equals></Filter>" > [RESULT]
#
# Verify OVERLAPS Result:  Prince Edward Island
# RUN_PARMS: wfs_filter_overlaps.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Overlaps><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>-64.75,46.08 -63.53,46.08 -63.53,47.29 -64.75,47.29</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Overlaps></Filter>" > [RESULT]


# Verify WITHIN Results:  Quebec, Iles de la Madeleine (3 islands)
# RUN_PARMS: wfs_filter_within.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Within><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>-62.16,47.07 -61.33,47.07 -61.33,47.75 -62.16,47.75</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Within></Filter>" > [RESULT]

# Same with WFS 2.0 but we must reverse the coordinates order due to the default CRS being EPSG:4326
# RUN_PARMS: wfs_filter_200_within.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Within><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>47.07,-62.16 47.07,-61.33 47.75,-61.33 47.75,-62.16</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Within></Filter>" > [RESULT_DEVERSION]
# Same with explicit SRS
# RUN_PARMS: wfs_filter_200_within_explicit_SRS.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Within><PropertyName>Geometry</PropertyName><gml:Polygon+srsName='EPSG:4326'><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>47.07,-62.16 47.07,-61.33 47.75,-61.33 47.75,-62.16</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Within></Filter>" > [RESULT_DEVERSION]

# Verify CONTAINS Result:  Quebec, Nova Scotia
# RUN_PARMS: wfs_filter_contains.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Contains><PropertyName>Geometry</PropertyName><gml:Polygon srsName=%22EPSG:3978%22><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>2526937.731300645973533,506636.554792948008981 2527346.529336222913116,506491.497425485227723 2527333.342302817385644,506188.195657153904904 2526858.609100211877376,506254.130824182415381 2526924.544267240446061,506610.18072613660479 2526937.731300645973533,506636.554792948008981</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Contains></Filter>" > [RESULT]

# Verify CROSSES Result:  Nova Scotia, Sable Island
# RUN_PARMS: wfs_filter_crosses.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Crosses><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>-60.25,43.79 -59.95,43.79 -59.95,44.09 -60.25,44.09</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Crosses></Filter>" > [RESULT]

# Verify TOUCHES Result:  Quebec, Iles de la Madeleine (AREA:  4833029.500)
# RUN_PARMS: wfs_filter_touches.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Touches><PropertyName>Geometry</PropertyName><gml:Point srsName=%22EPSG:3978%22><gml:coordinates>2407487.25,512212.40625</gml:coordinates></gml:Point></Touches></Filter>" > [RESULT]

# Verify EQUALS Result:  Quebec, Iles de la Madeleine (AREA:  4833029.500)
# RUN_PARMS: wfs_filter_equals_poly.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Equals><PropertyName>Geometry</PropertyName><gml:Polygon srsName=%22EPSG:3978%22><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>2407487.25,512212.40625 2406782.5,513659.375 2407398.0,515030.53125 2410186.75,515489.03125 2411133.5,513513.125 2409505.75,512788.40625 2407487.25,512212.40625</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Equals></Filter>" > [RESULT]

# Verify DISJOINT Result:  Nova Scotia, Sable Island
# RUN_PARMS: wfs_filter_disjoint.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Disjoint><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>-66.23,42.50 -58.95,45.67 -58.97,48.52 -67.01,47.13</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></Disjoint></Filter>" > [RESULT]

# Verify INTERSECTS Results:  Prince Edward Island
# RUN_PARMS: wfs_filter_intersects_line.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Intersects><PropertyName>Geometry</PropertyName><gml:LineString><gml:coordinates>-62.94,46.61 -62.74,45.83</gml:coordinates></gml:LineString></Intersects></Filter>" > [RESULT]

# Verify INTERSECTS Results with POST and MultiPoint
#
# RUN_PARMS: wfs_filter_intersects_multipoint.xml [MAPSERV] [POST]<?xml version="1.0" encoding="UTF-8"?><wfs:GetFeature service="WFS" version="1.0.0" outputFormat="GML2" xmlns="http://www.opengis.net/wfs" xmlns:ogc="http://www.opengis.net/ogc" xmlns:wfs="http://www.opengis.net/wfs" xmlns:gml="http://www.opengis.net/gml" xmlns:ms="http://mapserver.gis.umn.edu/mapserver" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/WFS-basic.xsd"><wfs:Query typeName="ms:province"><ogc:Filter xmlns:ogc="http://www.opengis.net/ogc"><ogc:Intersects><ogc:PropertyName>ms:msGeometry</ogc:PropertyName><gml:MultiPoint srsName="EPSG:4326"><gml:pointMember><gml:Point><gml:coordinates>-63 45</gml:coordinates></gml:Point></gml:pointMember><gml:pointMember><gml:Point><gml:coordinates>-61  46.1</gml:coordinates></gml:Point></gml:pointMember><gml:pointMember><gml:Point><gml:coordinates>-63 45</gml:coordinates></gml:Point></gml:pointMember></gml:MultiPoint></ogc:Intersects></ogc:Filter></wfs:Query></wfs:GetFeature>[/POST] > [RESULT]

# Invalid filter
# RUN_PARMS: wfs_filter_invalid_empty.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_invalid_no_filter_node.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<aFilter></aFilter>" > [RESULT]
# RUN_PARMS: wfs_filter_invalid_xml.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><non_closing_element></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_invalid_and.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><And/></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_invalid_not.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><Not/></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_invalid_foo.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><foo/></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_invalid_bbox.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><BBOX/></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_invalid_featureid.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><FeatureId/></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_invalid_property_is_equal.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsEqualTo/></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_invalid_property_is_equal_2.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsEqualTo><PropertyName/></PropertyIsEqualTo></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_invalid_property_is_like.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsLike/></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_invalid_property_is_between.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsBetween/></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_dwithin_invalid_geom.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><DWithin><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><foo/></gml:outerBoundaryIs></gml:Polygon><Distance units='dd'>0.05</Distance></DWithin></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_invalid_dwithin.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><DWithin/></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_crosses_invalid_geom.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=province&FILTER=<Filter><Crosses><PropertyName>Geometry</PropertyName><gml:Polygon><gml:outerBoundaryIs><foo/></gml:outerBoundaryIs></gml:Polygon></Crosses></Filter>" > [RESULT]
# RUN_PARMS: wfs_filter_invalid_crosses.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><Crosses/></Filter>" > [RESULT]

# Unknown PropertyName
# RUN_PARMS: wfs_filter_invalid_property_name.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&FILTER=<Filter><PropertyIsEqualTo><PropertyName>foo</PropertyName><Literal>Digby</Literal></PropertyIsEqualTo></Filter>" > [RESULT]

#
# Filter using startIndex
# RUN_PARMS: wfs_filter_startindex.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&propertyname=(NAME)&maxfeatures=10&startindex=0" > [RESULT]
# RUN_PARMS: wfs_filter_startindex2.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=popplace&propertyname=(NAME)&maxfeatures=10&startindex=10" > [RESULT]
MAP
#CONFIG "MS_ERRORFILE" "stderr"
NAME WFS_FILTER
STATUS ON
SIZE 400 300
#EXTENT   2018000 -73300 3410396 647400
#UNITS METERS
EXTENT -67.5725 42 -58.9275 48.5
UNITS DD
IMAGECOLOR 255 255 255
SHAPEPATH ./data
SYMBOLSET etc/symbols.sym
FONTSET etc/fonts.txt


#
# Start of web interface definition
#
WEB

 IMAGEPATH "/tmp/ms_tmp/"
 IMAGEURL "/ms_tmp/"

  METADATA
    "ows_updatesequence"   "123"
    "wfs_title"		   "Test simple wfs"
    "wfs_onlineresource"   "http://localhost/path/to/wfs_simple?"
    "wfs_srs"		   "EPSG:4326 EPSG:4269"
    "ows_schemas_location" "http://ogc.dmsolutions.ca"
    "ows_enable_request" "*" 
  END
END

PROJECTION
  "init=epsg:4326"
END

#
# Start of layer definitions
#



LAYER

  NAME province
  DATA province
  METADATA
    "wfs_title"         "province"
    "wfs_description"   "province"
    "wfs_result_fields" "NAME_E YEAR_EST AREA_KMSQ"
    "gml_include_items" "all"
  END
  TYPE POINT
  STATUS ON
  PROJECTION
    "init=epsg:3978"
  END

  CLASSITEM "Name_e"

  CLASS
    NAME "Province"
    COLOR 200 255 0
    OUTLINECOLOR 120 120 120
  END
END # Layer

LAYER
  NAME park
  DATA park
  METADATA
    "wfs_title"             "park"
    "wfs_version"           "1.0.0"
    "wfs_description"	    "Parks"
    "wfs_result_fields"     "NAME_E YEAR_EST AREA_KMSQ"
    "gml_include_items" "all"
   END
  TYPE POLYGON
  STATUS ON
  PROJECTION
    "init=epsg:3978"
  END

  CLASS
    NAME "Parks"
    COLOR 200 255 0
    OUTLINECOLOR 120 120 120
  END
END # Layer



LAYER

  NAME popplace
  DATA popplace
  METADATA
    "wfs_title"         "popplace"
    "wfs_description"   "Cities"
    "wfs_result_fields" "NAME"
    "gml_include_items" "all"
   END
  TYPE POINT
  STATUS ON
  PROJECTION
    "init=epsg:3978"
  END

  LabelItem "Name"
  CLASSITEM "Capital" 

  CLASS
    EXPRESSION /./  
    SYMBOL 2
    SIZE 8
    NAME "Cities"
    LABEL
      COLOR  0 0 0
      FONT Vera
      TYPE truetype
      SIZE 8
      POSITION AUTO			
      PARTIALS FALSE
      OUTLINECOLOR 255 255 255			
    END 
    COLOR 0 0 0
  END
END # Layer


LAYER
  NAME road
  DATA road
  METADATA
    "wfs_title"       "road"
    "wfs_description" "Roads"
    "gml_include_items" "all"
  END
  TYPE LINE
  STATUS ON
  PROJECTION
    "init=epsg:3978"
  END

  CLASSITEM "Name_e"
  CLASS
    NAME "Roads"
    SYMBOL 0 
    COLOR 220 0 0
  END
END # Layer


LAYER
  NAME test_islike_escaping
  DATA test_islike_escaping
  METADATA
    "wfs_title"       "test_islike_escaping"
    "wfs_description" "test_islike_escaping"
    "gml_include_items" "all"
  END
  TYPE LINE
  STATUS ON
  PROJECTION
    "init=epsg:4326"
  END

END # Layer

END # Map File
