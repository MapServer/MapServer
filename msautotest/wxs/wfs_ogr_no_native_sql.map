#
# Test WFS
#
# REQUIRES: SUPPORTS=WFS INPUT=OGR
#
# simple bbox
#
# RUN_PARMS: wfs_ogr_native_sql_01.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><BBOX><PropertyName>Geometry</PropertyName><Box srsName='EPSG:32632'><coordinates>659159,4877386 696879,4898059</coordinates></Box></BBOX></Filter>" > [RESULT]
#
# and, or, not
#
# RUN_PARMS: wfs_ogr_native_sql_02.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><AND><BBOX><PropertyName>Geometry</PropertyName><Box srsName='EPSG:32632'><coordinates>643159,4877386 696879,4898059</coordinates></Box></BBOX><PropertyIsEqualTo><PropertyName>name</PropertyName><Literal>Fanano</Literal></PropertyIsEqualTo></AND></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_03.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><OR><BBOX><PropertyName>Geometry</PropertyName><Box srsName='EPSG:32632'><coordinates>659159,4877386 696879,4898059</coordinates></Box></BBOX><PropertyIsEqualTo><PropertyName>name</PropertyName><Literal>Fanano</Literal></PropertyIsEqualTo></OR></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_04.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><AND><BBOX><PropertyName>Geometry</PropertyName><Box srsName='EPSG:32632'><coordinates>659159,4877386 696879,4898059</coordinates></Box></BBOX><NOT><PropertyIsLike wildCard="*" singleChar="?" escape="!" matchCase="false"><PropertyName>name</PropertyName><Literal>Sambuca*</Literal></PropertyIsLike></NOT></AND></Filter>" > [RESULT]
#
# = != > < >= <= with string
#
# RUN_PARMS: wfs_ogr_native_sql_05.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsEqualTo matchCase="false"><PropertyName>name</PropertyName><Literal>fanano</Literal></PropertyIsEqualTo></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_06.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsEqualTo><PropertyName>name</PropertyName><Literal>Fanano</Literal></PropertyIsEqualTo></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_07.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsEqualTo matchCase="false"><PropertyName>name</PropertyName><Literal>fanano</Literal></PropertyIsEqualTo></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_08.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsNotEqualTo><PropertyName>name</PropertyName><Literal>Fanano</Literal></PropertyIsNotEqualTo></Filter>" > [RESULT]
#
# bug in MS filter: wfs_ogr_native_sql_09.xml should not have Fanano, matchCase="false" is ignored
#
# RUN_PARMS: wfs_ogr_native_sql_09.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsNotEqualTo matchCase="false"><PropertyName>name</PropertyName><Literal>fanano</Literal></PropertyIsNotEqualTo></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_10.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsGreaterThan><PropertyName>name</PropertyName><Literal>Pistoia</Literal></PropertyIsGreaterThan></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_11.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsLessThan><PropertyName>name</PropertyName><Literal>Pistoia</Literal></PropertyIsLessThan></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_12.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsGreaterThanOrEqualTo><PropertyName>name</PropertyName><Literal>Pistoia</Literal></PropertyIsGreaterThanOrEqualTo></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_13.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsLessThanOrEqualTo><PropertyName>name</PropertyName><Literal>Pistoia</Literal></PropertyIsLessThanOrEqualTo></Filter>" > [RESULT]
#
# = != > < >= <= with number
#
# RUN_PARMS: wfs_ogr_native_sql_14.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsGreaterThan><PropertyName>peoples</PropertyName><Literal>17502</Literal></PropertyIsGreaterThan></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_15.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsLessThan><PropertyName>peoples</PropertyName><Literal>2000</Literal></PropertyIsLessThan></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_16.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsGreaterThanOrEqualTo><PropertyName>peoples</PropertyName><Literal>17502</Literal></PropertyIsGreaterThanOrEqualTo></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_17.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsLessThanOrEqualTo><PropertyName>peoples</PropertyName><Literal>2000</Literal></PropertyIsLessThanOrEqualTo></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_18.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsEqualTo><PropertyName>peoples</PropertyName><Literal>1604</Literal></PropertyIsEqualTo></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_19.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsBetween><ValueReference>peoples</ValueReference><LowerBoundary><Literal>1000</Literal></LowerBoundary><UpperBoundary><Literal>2001</Literal></UpperBoundary></PropertyIsBetween></Filter>" > [RESULT]
#
# missing comparison tests: time, boolean
#
# PropertyIsLike
#
# RUN_PARMS: wfs_ogr_native_sql_20.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsLike wildCard="*" singleChar="?" escape="!"><PropertyName>name</PropertyName><Literal>V*o</Literal></PropertyIsLike></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_21.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsLike wildCard="*" singleChar="?" escape="!" matchCase="false"><PropertyName>name</PropertyName><Literal>v*o</Literal></PropertyIsLike></Filter>" > [RESULT]
#
# bug in MS: ? is treated as * in this case:
#
# UN_PARMS: wfs_ogr_native_sql_22.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><PropertyIsLike wildCard="*" singleChar="?" escape="!"><PropertyName>name</PropertyName><Literal>?r*</Literal></PropertyIsLike></Filter>" > [RESULT]
#
# spatial predicates
# intersects, disjoint, touches, overlaps, crosses, within, contains, equals, beyond, dwithin
#
# RUN_PARMS: wfs_ogr_native_sql_23.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><Intersects><PropertyName>Geometry</PropertyName><Polygon><exterior><LinearRing><posList>653627 4881103 653174 4890443 663148 4887813 663330 4879471 653627 4881103</posList></LinearRing></exterior></Polygon></Intersects></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_24.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><Disjoint><PropertyName>Geometry</PropertyName><Polygon><exterior><LinearRing><posList>653627 4881103 653174 4890443 663148 4887813 663330 4879471 653627 4881103</posList></LinearRing></exterior></Polygon></Disjoint></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_25.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><Touches><PropertyName>Geometry</PropertyName><Polygon><exterior><LinearRing><posList>653627 4881103 653174 4890443 663148 4887813 663330 4879471 653627 4881103</posList></LinearRing></exterior></Polygon></Touches></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_26.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><Overlaps><PropertyName>Geometry</PropertyName><Polygon><exterior><LinearRing><posList>653627 4881103 653174 4890443 663148 4887813 663330 4879471 653627 4881103</posList></LinearRing></exterior></Polygon></Overlaps></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_27.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><Crosses><PropertyName>Geometry</PropertyName><Polygon><exterior><LinearRing><posList>653627 4881103 653174 4890443 663148 4887813 663330 4879471 653627 4881103</posList></LinearRing></exterior></Polygon></Crosses></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_28.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><Within><PropertyName>Geometry</PropertyName><Polygon><exterior><LinearRing><posList>653627 4881103 653174 4890443 663148 4887813 663330 4879471 653627 4881103</posList></LinearRing></exterior></Polygon></Within></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_29.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><Contains><PropertyName>Geometry</PropertyName><Polygon><exterior><LinearRing><posList>653627 4881103 653174 4890443 663148 4887813 663330 4879471 653627 4881103</posList></LinearRing></exterior></Polygon></Contains></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_30.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><Equals><PropertyName>Geometry</PropertyName><Point srsName="EPSG:32632"><pos>662773 4891987.41</pos></Point></Equals></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_31.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><Beyond><Distance unit="m">20000</Distance><PropertyName>Geometry</PropertyName><Polygon><exterior><LinearRing><posList>653627 4881103 653174 4890443 663148 4887813 663330 4879471 653627 4881103</posList></LinearRing></exterior></Polygon></Beyond></Filter>" > [RESULT]
# RUN_PARMS: wfs_ogr_native_sql_32.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&TYPENAME=towns&OUTPUTFORMAT=GML2&FILTER=<Filter><DWithin><Distance unit="m">1000</Distance><PropertyName>Geometry</PropertyName><Polygon><exterior><LinearRing><posList>653627 4881103 653174 4890443 663148 4887813 663330 4879471 653627 4881103</posList></LinearRing></exterior></Polygon></DWithin></Filter>" > [RESULT]

MAP

NAME WFS_OGR_NATIVE_SQL_TEST
STATUS ON
SIZE 400 300
EXTENT 6 30 21 50
UNITS METERS
IMAGECOLOR 255 255 255

#
# Start of web interface definition
#

WEB

 IMAGEPATH "tmp/"
 IMAGEURL "/ms_tmp/"

  METADATA
    "wfs_title"		   "Test simple wfs"
    "wfs_onlineresource"   "http://localhost/path/to/wfs_simple?"
    "wfs_srs"		   "EPSG:32632"
    "wfs_enable_request"   "*" 
  END
END

PROJECTION
  "+proj=latlong +datum=WGS84"
END

#
# Start of layer definitions
#

LAYER

  NAME towns
  DATA towns
  CONNECTIONTYPE OGR
  CONNECTION "./data/db.sqlite"
  PROCESSING "NATIVE_SQL=NO"
  METADATA
    "ows_title"         "towns"
    "wfs_featureid"     "ID"
    "gml_include_items" "all"
    "gml_types"         "auto"
    "wfs_getfeature_formatlist" "ogrgml"
  END
  TYPE POINT
  STATUS ON
  PROJECTION
    "init=epsg:32632"
  END

  TEMPLATE "wfs_ogr_native_sql.map"
END # Layer

END # Map File
