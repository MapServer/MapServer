#
# Test optional GML items
#
# REQUIRES: INPUT=OGR SUPPORTS=WFS

#
# -------------------
# GetPropertyValue
#
# RUN_PARMS: wfs_200_getpropertyvalue.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetPropertyValue&TYPENAMES=province&VALUEREFERENCE=NAME" > [RESULT_DEVERSION]
# RUN_PARMS: wfs_200_getpropertyvalue_with_ns.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetPropertyValue&TYPENAMES=ms:province&VALUEREFERENCE=NAME" > [RESULT_DEVERSION]
# RUN_PARMS: wfs_200_getpropertyvalue_alias.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetPropertyValue&TYPENAMES=province&VALUEREFERENCE=NomFrancais" > [RESULT_DEVERSION]
# RUN_PARMS: wfs_200_getpropertyvalue_geometry.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetPropertyValue&TYPENAMES=province&VALUEREFERENCE=msGeometry" > [RESULT_DEVERSION]
# RUN_PARMS: wfs_200_getpropertyvalue_all_options_hits.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetPropertyValue&TYPENAME=province&VALUEREFERENCE=msGeometry&COUNT=5&STARTINDEX=0&SRSNAME=EPSG:4269&FILTER=<fes:Filter><fes:FeatureId rid='province.1009'/></fes:Filter>&OUTPUTFORMAT=application/gml%2Bxml;%20version=3.2&RESULTTYPE=hits" > [RESULT_DEVERSION]
# RUN_PARMS: wfs_200_exception_getpropertyvalue_invalid_typename.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetPropertyValue&TYPENAMES=foo&VALUEREFERENCE=foo" > [RESULT_DEVERSION]
# RUN_PARMS: wfs_200_exception_getpropertyvalue_excluded_property.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetPropertyValue&TYPENAMES=province&VALUEREFERENCE=REG_CODE" > [RESULT_DEVERSION]
# RUN_PARMS: wfs_200_exception_getpropertyvalue_invalid_property.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetPropertyValue&TYPENAMES=province&VALUEREFERENCE=foo" > [RESULT_DEVERSION]
# RUN_PARMS: wfs_200_exception_getpropertyvalue_invalid_outputformat.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetPropertyValue&TYPENAMES=province&VALUEREFERENCE=NAME&OUTPUTFORMAT=foo" > [RESULT_DEVERSION]
# RUN_PARMS: wfs_200_exception_getpropertyvalue_missing_typenames.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetPropertyValue&VALUEREFERENCE=NAME" > [RESULT_DEVERSION]
# RUN_PARMS: wfs_200_exception_getpropertyvalue_missing_valuereference.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetPropertyValue&TYPENAMES=province" > [RESULT_DEVERSION]
# RUN_PARMS: wfs_200_post_getpropertyvalue.xml [MAPSERV] [POST]<GetPropertyValue service="WFS" version="2.0.0" valueReference="NAME" xmlns="http://www.opengis.net/wfs/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd"><Query typeNames="province"/></GetPropertyValue>[/POST] > [RESULT_DEVERSION]
# RUN_PARMS: wfs_200_post_getpropertyvalue_all_options.xml [MAPSERV] [POST]<GetPropertyValue service="WFS" version="2.0.0" valueReference="msGeometry" startIndex="2" count="5" outputFormat="application/gml+xml; version=3.2" xmlns="http://www.opengis.net/wfs/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fes="http://www.opengis.net/fes/2.0" xsi:schemaLocation="http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd"><Query typeNames="province" srsName="EPSG:4269"><PropertyName>ignored_hopefully</PropertyName><fes:Filter><fes:PropertyIsEqualTo><fes:ValueReference>NAME</fes:ValueReference><fes:Literal></fes:Literal></fes:PropertyIsEqualTo></fes:Filter></Query></GetPropertyValue>[/POST] > [RESULT_DEVERSION]
#
#
# RUN_PARMS: wfs_optional_items_describe.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=DescribeFeatureType&TYPENAME=province" > [RESULT]

# Should only return msGeometry, NAME, NAME_E and NAME_F
# RUN_PARMS: wfs_optional_items_get_feature.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAME=province" > [RESULT_DEVERSION]

# Should return all items, including optional ones, but not REG_CODE
# RUN_PARMS: wfs_optional_items_get_feature_all.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAME=province&PROPERTYNAME=*" > [RESULT_DEVERSION]

# Asks for an optional parameter (in addition to mandatory ones). No geometry
# RUN_PARMS: wfs_optional_items_get_feature_area.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAME=province&PROPERTYNAME=AREA" > [RESULT_DEVERSION]

# Asks for an optional parameter that is alias (in addition to mandatory ones). No geometry
# RUN_PARMS: wfs_optional_items_get_feature_alias.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAME=province&PROPERTYNAME=NomFrancais" > [RESULT_DEVERSION]

# Filter with alias item
# RUN_PARMS: wfs_optional_items_get_feature_filter_alias.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAME=province&PROPERTYNAME=NAME_E&FILTER=<Filter><PropertyIsEqualTo><ValueReference>NomFrancais</ValueReference><Literal>Ile-du-Prince-Edouard</Literal></PropertyIsEqualTo></Filter>" > [RESULT_DEVERSION]

# Asks for an optional parameter and geometry (in addition to mandatory ones).
# RUN_PARMS: wfs_optional_items_get_feature_area_geometry.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAME=province&PROPERTYNAME=AREA,msGeometry" > [RESULT_DEVERSION]

# Asks for geometry (in addition to mandatory ones).
# RUN_PARMS: wfs_optional_items_get_feature_geometry.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAME=province&PROPERTYNAME=msGeometry" > [RESULT_DEVERSION]

# Asks for an optional parameter and a mandatory one. No geometry
# RUN_PARMS: wfs_optional_items_get_feature_area_name.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAME=province&PROPERTYNAME=AREA,NAME" > [RESULT_DEVERSION]

# Asks for an excluded parameter
# RUN_PARMS: wfs_optional_items_get_feature_excluded.xml [MAPSERV] QUERY_STRING="map=[MAPFILE]&SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAME=province&PROPERTYNAME=REG_CODE" > [RESULT_DEVERSION]

MAP

NAME WFS_TEST
STATUS ON
SIZE 400 300
#EXTENT   2018000 -73300 3410396 647400
EXTENT -67.5725 42 -58.9275 48.5
UNITS METERS
IMAGECOLOR 255 255 255
SHAPEPATH ./data
SYMBOLSET etc/symbols.sym
FONTSET etc/fonts.txt

#
# Start of web interface definition
#
WEB

 IMAGEPATH "/tmp/ms_tmp/"
 IMAGEURL "/ms_tmp/"

  METADATA
    #"wfs_validate_xml" "true"
    #"wfs_schemas_dir" "SCHEMAS_OPENGIS_NET"
    "wfs_maxfeatures" "1000"
    "wfs_compute_number_matched" "true"
    "ows_updatesequence"   "123"
    "wfs_title"        "Test simple wfs"
    "wfs_onlineresource"   "http://localhost/path/to/wfs_simple?myparam=something&"
    "wfs_srs"          "EPSG:4326 EPSG:4269"
    "ows_abstract"    "Test WFS Abstract"
    "ows_keywordlist" "ogc,wfs,gml,om"
    "ows_service_onlineresource" "http://localhost"
    "ows_fees" "none"
    "ows_accessconstraints" "none"
    "ows_addresstype" "postal"
    "ows_address"     "123 SomeRoad Road"
    "ows_city" "Toronto"
    "ows_stateorprovince" "Ontario"
    "ows_postcode" "xxx-xxx"
    "ows_country" "Canada"
    "ows_contactelectronicmailaddress" "tomkralidis@xxxxxxx.xxx"
    "ows_contactvoicetelephone" "+xx-xxx-xxx-xxxx"
    "ows_contactfacsimiletelephone" "+xx-xxx-xxx-xxxx"
    "ows_contactperson" "Tom Kralidis"
    "ows_contactorganization" "MapServer"
    "ows_contactposition" "self"
    "ows_hoursofservice" "0800h - 1600h EST"
    "ows_contactinstructions" "during hours of service"
    "ows_role" "staff"
    "ows_enable_request" "*" 
  END
END

#
# Start of layer definitions
#



LAYER
  NAME province
  DATA province
  METADATA
    "wfs_title"         "province"
    "wfs_description"   "province"
    "wfs_featureid"     "PROVINCE_I"
    "gml_geometries"    "msGeometry"
    "gml_msGeometry_type" "polygon"
    "gml_include_items" "all"
    "gml_exclude_items" "REG_CODE"
    "gml_optional_items" "all"
    "gml_mandatory_items" "NAME"
    "gml_default_items"   "NAME_E,NAME_F"
    "gml_NAME_F_alias"    "NomFrancais"
  END
  TYPE POINT
  STATUS ON
  PROJECTION
    "init=./data/epsg2:42304"
#    "init=epsg:42304"
  END

  CLASSITEM "Name_e"

  CLASS
    NAME "Province"
    COLOR 200 255 0
    OUTLINECOLOR 120 120 120
  END
END # Layer


END # Map File
